{"docstore/data": {"52d59baf-87aa-4ccd-8740-8996a1330741": {"__data__": {"id_": "52d59baf-87aa-4ccd-8740-8996a1330741", "embedding": null, "metadata": {"page_label": "1", "file_name": "Backend_Developer_Task_Sheet.pdf", "file_path": "uploads\\Backend_Developer_Task_Sheet.pdf", "file_type": "application/pdf", "file_size": 100532, "creation_date": "2025-04-27", "last_modified_date": "2025-04-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text_resource": {"embeddings": null, "text": " \nBackend  Developer  Task  Sheet  \u2013  Video  Editing  Platform  \nAPI\n  \nProject  Title:  \nBuild  the  Backend  for  a  Web-based  Video  Editing  Platform  \n \nObjective:  \nCreate  a  scalable  and  modular  backend  service  that  allows  users  to  upload  videos,  apply  \nediting\n \noperations\n \n(trimming,\n \nsubtitle\n \noverlay,\n \naudio\n \nmodification,\n \ntext/image\n \naddition),\n \nand\n \ndownload\n \nthe\n \nrendered\n \nvideo.\n \nThe\n \ngoal\n \nis\n \nto\n \nhandle\n \nvideo\n \ntransformation\n \nusing\n \nAPIs,\n \nleveraging\n FFmpeg and  persistent  storage.  \nThis  task  is  focused  solely  on  the  backend .  Frontend  interaction  is  not  required,  but  your  API  \nshould\n \nbe\n \ndesigned\n \nas\n \nif\n \nit\n \nwill\n \nbe\n \nconsumed\n \nby\n \na\n \nvideo\n \neditor\n \nfrontend.\n \n \nTech  Stack  (Strict  Requirements)  \nYou  must  use:  \n\u25cf  Node.js  \n \u25cf  Express.js  \n \u25cf  PostgreSQL  (using  Prisma  ORM  or  Sequelize)  \n \u25cf  FFmpeg  (via  fluent-ffmpeg or  direct  shell  commands)  \n \u25cf  Multer  or  equivalent  for  file  uploads  \n \nOptional/Recommended:  \n\u25cf  Cloud  storage :  AWS  S3  or  mock  local  storage  \n ", "path": null, "url": null, "mimetype": null}, "image_resource": null, "audio_resource": null, "video_resource": null, "text_template": "{metadata_str}\n\n{content}", "class_name": "Document", "text": " \nBackend  Developer  Task  Sheet  \u2013  Video  Editing  Platform  \nAPI\n  \nProject  Title:  \nBuild  the  Backend  for  a  Web-based  Video  Editing  Platform  \n \nObjective:  \nCreate  a  scalable  and  modular  backend  service  that  allows  users  to  upload  videos,  apply  \nediting\n \noperations\n \n(trimming,\n \nsubtitle\n \noverlay,\n \naudio\n \nmodification,\n \ntext/image\n \naddition),\n \nand\n \ndownload\n \nthe\n \nrendered\n \nvideo.\n \nThe\n \ngoal\n \nis\n \nto\n \nhandle\n \nvideo\n \ntransformation\n \nusing\n \nAPIs,\n \nleveraging\n FFmpeg and  persistent  storage.  \nThis  task  is  focused  solely  on  the  backend .  Frontend  interaction  is  not  required,  but  your  API  \nshould\n \nbe\n \ndesigned\n \nas\n \nif\n \nit\n \nwill\n \nbe\n \nconsumed\n \nby\n \na\n \nvideo\n \neditor\n \nfrontend.\n \n \nTech  Stack  (Strict  Requirements)  \nYou  must  use:  \n\u25cf  Node.js  \n \u25cf  Express.js  \n \u25cf  PostgreSQL  (using  Prisma  ORM  or  Sequelize)  \n \u25cf  FFmpeg  (via  fluent-ffmpeg or  direct  shell  commands)  \n \u25cf  Multer  or  equivalent  for  file  uploads  \n \nOptional/Recommended:  \n\u25cf  Cloud  storage :  AWS  S3  or  mock  local  storage  \n "}, "__type__": "4"}, "a1f46eaa-c363-42ec-afda-55255fc1b1ec": {"__data__": {"id_": "a1f46eaa-c363-42ec-afda-55255fc1b1ec", "embedding": null, "metadata": {"page_label": "2", "file_name": "Backend_Developer_Task_Sheet.pdf", "file_path": "uploads\\Backend_Developer_Task_Sheet.pdf", "file_type": "application/pdf", "file_size": 100532, "creation_date": "2025-04-27", "last_modified_date": "2025-04-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text_resource": {"embeddings": null, "text": " \n\u25cf  BullMQ  /  Redis  (for  background  rendering  jobs)  \n \u25cf  Swagger  /  Postman  for  API  docs  \n \n \nCore  Features  to  Implement  \n1.  Video  Upload  Endpoint  \n\u25cf  POST  /api/videos/upload  \n \u25cf  Accepts  a  video  file  (e.g.,  .mp4,  .mov)  \n \u25cf  Stores  metadata  in  the  DB  (video  name,  duration,  size,  status)  \n \u25cf  Save  video  file  locally  or  in  S3  \n \nVideo  Trimming  /  Cutting  \n\u25cf  POST  /api/videos/:id/trim  \n \u25cf  Accepts  start/end  timestamps  \n \u25cf  Uses  FFmpeg  to  create  a  trimmed  version  \n \u25cf  Save  trimmed  video  path  and  update  DB  \n \n \nAdd  Subtitles  \n\u25cf  POST  /api/videos/:id/subtitles  \n \u25cf  Accept  subtitle  text  +  start/end  time  \n \u25cf  Overlay  on  video  using  FFmpeg  \n \n \n6.  Render  Final  Video  ", "path": null, "url": null, "mimetype": null}, "image_resource": null, "audio_resource": null, "video_resource": null, "text_template": "{metadata_str}\n\n{content}", "class_name": "Document", "text": " \n\u25cf  BullMQ  /  Redis  (for  background  rendering  jobs)  \n \u25cf  Swagger  /  Postman  for  API  docs  \n \n \nCore  Features  to  Implement  \n1.  Video  Upload  Endpoint  \n\u25cf  POST  /api/videos/upload  \n \u25cf  Accepts  a  video  file  (e.g.,  .mp4,  .mov)  \n \u25cf  Stores  metadata  in  the  DB  (video  name,  duration,  size,  status)  \n \u25cf  Save  video  file  locally  or  in  S3  \n \nVideo  Trimming  /  Cutting  \n\u25cf  POST  /api/videos/:id/trim  \n \u25cf  Accepts  start/end  timestamps  \n \u25cf  Uses  FFmpeg  to  create  a  trimmed  version  \n \u25cf  Save  trimmed  video  path  and  update  DB  \n \n \nAdd  Subtitles  \n\u25cf  POST  /api/videos/:id/subtitles  \n \u25cf  Accept  subtitle  text  +  start/end  time  \n \u25cf  Overlay  on  video  using  FFmpeg  \n \n \n6.  Render  Final  Video  "}, "__type__": "4"}, "69f15a85-a51a-4d56-ab2f-589697dd276e": {"__data__": {"id_": "69f15a85-a51a-4d56-ab2f-589697dd276e", "embedding": null, "metadata": {"page_label": "3", "file_name": "Backend_Developer_Task_Sheet.pdf", "file_path": "uploads\\Backend_Developer_Task_Sheet.pdf", "file_type": "application/pdf", "file_size": 100532, "creation_date": "2025-04-27", "last_modified_date": "2025-04-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text_resource": {"embeddings": null, "text": " \n\u25cf  POST  /api/videos/:id/render  \n \u25cf  Combines  all  changes  into  one  final  video  \n \u25cf  Saves  it  and  updates  status  in  DB  \n \u25cf  Optional:  Trigger  render  via  queue  \n \n7.  Download  Final  Video  \n\u25cf  GET  /api/videos/:id/download  \n \u25cf  Returns  final  rendered  file  for  download  \n \n \n \n \n \n ", "path": null, "url": null, "mimetype": null}, "image_resource": null, "audio_resource": null, "video_resource": null, "text_template": "{metadata_str}\n\n{content}", "class_name": "Document", "text": " \n\u25cf  POST  /api/videos/:id/render  \n \u25cf  Combines  all  changes  into  one  final  video  \n \u25cf  Saves  it  and  updates  status  in  DB  \n \u25cf  Optional:  Trigger  render  via  queue  \n \n7.  Download  Final  Video  \n\u25cf  GET  /api/videos/:id/download  \n \u25cf  Returns  final  rendered  file  for  download  \n \n \n \n \n \n "}, "__type__": "4"}, "0185a9d1-fd2b-4627-9b50-11723496c5ca": {"__data__": {"id_": "0185a9d1-fd2b-4627-9b50-11723496c5ca", "embedding": null, "metadata": {"page_label": "4", "file_name": "Backend_Developer_Task_Sheet.pdf", "file_path": "uploads\\Backend_Developer_Task_Sheet.pdf", "file_type": "application/pdf", "file_size": 100532, "creation_date": "2025-04-27", "last_modified_date": "2025-04-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text_resource": {"embeddings": null, "text": " \nSubmission  Requirements  \nTo  complete  your  submission,  please  provide  the  following:  \n1.  GitHub  Repository  Link  \n \nUpload\n \nyour\n \nproject\n \nto\n \na\n \npublic\n \nor\n \nprivate\n \nGitHub\n \nrepository.\n \nMake\n \nsure\n \nthe\n \nrepository:\n \n \u25cb  Contains  all  necessary  source  code  and  assets  \n \u25cb  Includes  a  clear  README.md with  setup  instructions  and  any  relevant  notes  \n \u25cb  Has  clear  commit  history  that  reflects  your  progress  \n 2.  Google  Drive  Link  with  Demo  Video  \n \nRecord\n \na\n \nshort\n \nscreen\n \nrecording\n \n(3\u20135\n \nminutes)\n \nof\n \nyour\n \ncompleted\n \nproject\n \ndemonstrating\n \nall\n \nkey\n \nfeatures.\n \nThe\n \nvideo\n \nmust\n \ninclude\n \na\n \nvoice-over\n \nexplanation\n \nwalking\n \nthrough:\n \n \u25cb  The  main  interface  and  functionality  \n \u25cb  How  each  feature  works  (e.g.,  uploads,  editing  UI,  previews)  \n \u25cb  Any  challenges  or  creative  decisions  made  \n 3.  Upload  the  video  to  Google  Drive  and  share  the  link  with  public  or  restricted  access  (as  \npreferred).\n \nMake\n \nsure\n \nsharing\n \npermissions\n \nare\n \ncorrect.\n \n \n \nDeadline  \nThe  final  submission  is  due  by  May  1st  at  6:00  PM  IST .  \n\u26a0  Important:  Late  submissions  will  not  be  accepted  under  any  circumstances.  \nPlease\n \nensure\n \nboth\n \nthe\n \nGitHub\n \nrepo\n \nand\n \nthe\n \nGoogle\n \nDrive\n \ndemo\n \nlink\n \nare\n \nshared\n \nbefore\n \nthe\n \ndeadline.\n \n \n\ud83d\ude4b  Tips  \n\u25cf  Think  about  how  a  real  editing  tool  would  consume  your  API.  \n \u25cf  Keep  your  FFmpeg  logic  modular  \u2014  future  enhancements  should  be  easy.  \n ", "path": null, "url": null, "mimetype": null}, "image_resource": null, "audio_resource": null, "video_resource": null, "text_template": "{metadata_str}\n\n{content}", "class_name": "Document", "text": " \nSubmission  Requirements  \nTo  complete  your  submission,  please  provide  the  following:  \n1.  GitHub  Repository  Link  \n \nUpload\n \nyour\n \nproject\n \nto\n \na\n \npublic\n \nor\n \nprivate\n \nGitHub\n \nrepository.\n \nMake\n \nsure\n \nthe\n \nrepository:\n \n \u25cb  Contains  all  necessary  source  code  and  assets  \n \u25cb  Includes  a  clear  README.md with  setup  instructions  and  any  relevant  notes  \n \u25cb  Has  clear  commit  history  that  reflects  your  progress  \n 2.  Google  Drive  Link  with  Demo  Video  \n \nRecord\n \na\n \nshort\n \nscreen\n \nrecording\n \n(3\u20135\n \nminutes)\n \nof\n \nyour\n \ncompleted\n \nproject\n \ndemonstrating\n \nall\n \nkey\n \nfeatures.\n \nThe\n \nvideo\n \nmust\n \ninclude\n \na\n \nvoice-over\n \nexplanation\n \nwalking\n \nthrough:\n \n \u25cb  The  main  interface  and  functionality  \n \u25cb  How  each  feature  works  (e.g.,  uploads,  editing  UI,  previews)  \n \u25cb  Any  challenges  or  creative  decisions  made  \n 3.  Upload  the  video  to  Google  Drive  and  share  the  link  with  public  or  restricted  access  (as  \npreferred).\n \nMake\n \nsure\n \nsharing\n \npermissions\n \nare\n \ncorrect.\n \n \n \nDeadline  \nThe  final  submission  is  due  by  May  1st  at  6:00  PM  IST .  \n\u26a0  Important:  Late  submissions  will  not  be  accepted  under  any  circumstances.  \nPlease\n \nensure\n \nboth\n \nthe\n \nGitHub\n \nrepo\n \nand\n \nthe\n \nGoogle\n \nDrive\n \ndemo\n \nlink\n \nare\n \nshared\n \nbefore\n \nthe\n \ndeadline.\n \n \n\ud83d\ude4b  Tips  \n\u25cf  Think  about  how  a  real  editing  tool  would  consume  your  API.  \n \u25cf  Keep  your  FFmpeg  logic  modular  \u2014  future  enhancements  should  be  easy.  \n "}, "__type__": "4"}, "347a787e-895b-4551-befb-68a9524e3508": {"__data__": {"id_": "347a787e-895b-4551-befb-68a9524e3508", "embedding": null, "metadata": {"page_label": "5", "file_name": "Backend_Developer_Task_Sheet.pdf", "file_path": "uploads\\Backend_Developer_Task_Sheet.pdf", "file_type": "application/pdf", "file_size": 100532, "creation_date": "2025-04-27", "last_modified_date": "2025-04-29"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text_resource": {"embeddings": null, "text": " \n\u25cf  Clean,  consistent  error  handling  and  logging  is  a  big  plus.  \n \u25cf  If  using  background  jobs,  simulate  processing  time.  ", "path": null, "url": null, "mimetype": null}, "image_resource": null, "audio_resource": null, "video_resource": null, "text_template": "{metadata_str}\n\n{content}", "class_name": "Document", "text": " \n\u25cf  Clean,  consistent  error  handling  and  logging  is  a  big  plus.  \n \u25cf  If  using  background  jobs,  simulate  processing  time.  "}, "__type__": "4"}}, "docstore/metadata": {"52d59baf-87aa-4ccd-8740-8996a1330741": {"doc_hash": "afdd0423c72cf96344a5695370022bd478bbd2e1ee1209d72f8e4305e8fea183"}, "a1f46eaa-c363-42ec-afda-55255fc1b1ec": {"doc_hash": "0f530378cf2c3c5739c821b98512d3a75528280aebfe7ce79fd600f2ebce88a8"}, "69f15a85-a51a-4d56-ab2f-589697dd276e": {"doc_hash": "0578301c7f9c85c13d7ec02e4920037fc88d8754367168811158597abf916a73"}, "0185a9d1-fd2b-4627-9b50-11723496c5ca": {"doc_hash": "8c9704257d9d8e00913aba50d33d8f1d1fc50e57ac1f57695c97e8ed38d72b08"}, "347a787e-895b-4551-befb-68a9524e3508": {"doc_hash": "f5d22fefb1667080bed1ae60f41cf3ffe2f27058ce5c60757008f322f165af47"}}}